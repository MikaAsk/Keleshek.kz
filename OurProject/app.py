import streamlit as st
import pandas as pd
import plotly.express as px

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    return pd.read_csv("vacancies_january_2.csv")

df = load_data()

# --- –ù–∞–≤–∏–≥–∞—Ü–∏—è ---
if "page" not in st.session_state:
    st.session_state.page = "Home"

def navigate(page):
    st.session_state.page = page

st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
st.sidebar.button("üè† Home", on_click=lambda: navigate("Home"))
st.sidebar.button("üìä Analytics", on_click=lambda: navigate("Analytics"))
st.sidebar.button("üéì Universities", on_click=lambda: navigate("Universities"))

if st.session_state.page == "Home":
    st.title("üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    st.write("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥–ª–∞–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.")

elif st.session_state.page == "Analytics":
    st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ —Ç—Ä—É–¥–∞")

    # --- –§–∏–ª—å—Ç—Ä—ã ---
    st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
    city = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", ["–í—Å–µ"] + list(df["city"].unique()))
    role = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:", ["–í—Å–µ"] + list(df["professional_role"].unique()))
    employment_type = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏:", ["–í—Å–µ"] + list(df["employment_type"].unique()))
    experience = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:", ["–í—Å–µ"] + list(df["experience"].unique()))
    
    if st.sidebar.button("–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"):
        city, role, employment_type, experience = "–í—Å–µ", "–í—Å–µ", "–í—Å–µ", "–í—Å–µ"
    
    filtered_df = df.copy()
    if city != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["city"] == city]
    if role != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["professional_role"] == role]
    if employment_type != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["employment_type"] == employment_type]
    if experience != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["experience"] == experience]
    
    # --- –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π ---
    st.subheader("üåç –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π")
    if "latitude" in filtered_df.columns and "longitude" in filtered_df.columns:
        fig_map = px.scatter_mapbox(
            filtered_df, 
            lat="latitude", lon="longitude", 
            hover_name="name", 
            hover_data=["salary_from", "salary_currency", "employer_name"], 
            zoom=4
        )
        fig_map.update_layout(
            mapbox_style="open-street-map",
            margin={"r":0, "t":0, "l":0, "b":0}
        )
        st.plotly_chart(fig_map, use_container_width=True)
        st.write(f"–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ {len(filtered_df)} –≤–∞–∫–∞–Ω—Å–∏–π.")
    else:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")
    
    # --- –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ --- (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

elif st.session_state.page == "Universities":
    st.title("üéì –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã")
    st.write("–†–∞–∑–¥–µ–ª –æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏.")
