import streamlit as st
import pandas as pd
import plotly.express as px

# --- –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ---
@st.cache_data
def load_data():
    return pd.read_csv("vacancies_january_2.csv")

df = load_data()

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
if "page" not in st.session_state:
    st.session_state.page = "Home"

if "city" not in st.session_state:
    st.session_state.city = "–í—Å–µ"
if "role" not in st.session_state:
    st.session_state.role = "–í—Å–µ"
if "employment_type" not in st.session_state:
    st.session_state.employment_type = "–í—Å–µ"
if "experience" not in st.session_state:
    st.session_state.experience = "–í—Å–µ"

# --- –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
def navigate(page):
    st.session_state.page = page

def reset_filters():
    st.session_state.city = "–í—Å–µ"
    st.session_state.role = "–í—Å–µ"
    st.session_state.employment_type = "–í—Å–µ"
    st.session_state.experience = "–í—Å–µ"

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ---
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
st.sidebar.button("üè† Home", on_click=navigate, args=("Home",))
st.sidebar.button("üìä Analytics", on_click=navigate, args=("Analytics",))
st.sidebar.button("üéì Universities", on_click=navigate, args=("Universities",))

# --- –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ---
if st.session_state.page == "Home":
    st.title("üè† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    st.write("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥–ª–∞–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ –∏ –µ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.")

# --- –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ ---
elif st.session_state.page == "Analytics":
    st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ —Ç—Ä—É–¥–∞")

    # --- –§–∏–ª—å—Ç—Ä—ã ---
    st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
    st.session_state.city = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", ["–í—Å–µ"] + list(df["city"].unique()), index=["–í—Å–µ"] + list(df["city"].unique()).index(st.session_state.city) if st.session_state.city in df["city"].unique() else 0)
    st.session_state.role = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:", ["–í—Å–µ"] + list(df["professional_role"].unique()), index=["–í—Å–µ"] + list(df["professional_role"].unique()).index(st.session_state.role) if st.session_state.role in df["professional_role"].unique() else 0)
    st.session_state.employment_type = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–Ω—è—Ç–æ—Å—Ç–∏:", ["–í—Å–µ"] + list(df["employment_type"].unique()), index=["–í—Å–µ"] + list(df["employment_type"].unique()).index(st.session_state.employment_type) if st.session_state.employment_type in df["employment_type"].unique() else 0)
    st.session_state.experience = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:", ["–í—Å–µ"] + list(df["experience"].unique()), index=["–í—Å–µ"] + list(df["experience"].unique()).index(st.session_state.experience) if st.session_state.experience in df["experience"].unique() else 0)

    st.sidebar.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", on_click=reset_filters)

    # --- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö ---
    filtered_df = df.copy()
    if st.session_state.city != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["city"] == st.session_state.city]
    if st.session_state.role != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["professional_role"] == st.session_state.role]
    if st.session_state.employment_type != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["employment_type"] == st.session_state.employment_type]
    if st.session_state.experience != "–í—Å–µ":
        filtered_df = filtered_df[filtered_df["experience"] == st.session_state.experience]

    # --- –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π ---
    st.subheader("üåç –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π")
    if "latitude" in filtered_df.columns and "longitude" in filtered_df.columns and not filtered_df.empty:
        fig_map = px.scatter_mapbox(
            filtered_df, 
            lat="latitude", lon="longitude", 
            hover_name="name", 
            hover_data=["salary_from", "salary_currency", "employer_name"], 
            zoom=4
        )
        fig_map.update_layout(mapbox_style="open-street-map", margin={"r":0, "t":0, "l":0, "b":0})
        st.plotly_chart(fig_map, use_container_width=True)
        st.write(f"–í –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ {len(filtered_df)} –≤–∞–∫–∞–Ω—Å–∏–π.")
    else:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")

# --- –°—Ç—Ä–∞–Ω–∏—Ü–∞ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤ ---
elif st.session_state.page == "Universities":
    st.title("üéì –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã")
    st.write("–†–∞–∑–¥–µ–ª –æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞—Ö –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏.")
