import streamlit as st
import pandas as pd
import plotly.express as px

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
@st.cache_data
def load_data():
    return pd.read_csv("vacancies_january_2.csv")

df = load_data()

# --- –§–∏–ª—å—Ç—Ä—ã ---
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
city = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", ["–í—Å–µ"] + list(df["city"].unique()))
role = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:", ["–í—Å–µ"] + list(df["professional_role"].unique()))

filtered_df = df.copy()
if city != "–í—Å–µ":
    filtered_df = filtered_df[filtered_df["city"] == city]
if role != "–í—Å–µ":
    filtered_df = filtered_df[filtered_df["professional_role"] == role]

# –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
filtered_df = filtered_df.dropna(subset=["latitude", "longitude"])

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞ —Ç—Ä—É–¥–∞")

# --- –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ ---
with st.container():
    st.subheader("üåç –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π")
    
    if not filtered_df.empty:
        fig_map = px.scatter_mapbox(
            filtered_df, 
            lat="latitude", lon="longitude", 
            hover_name="name", 
            hover_data=["salary_from", "salary_currency", "employer_name"], 
            zoom=4, height=500
        )
        fig_map.update_layout(mapbox_style="open-street-map", margin={"r":0,"t":0,"l":0,"b":0})
        st.plotly_chart(fig_map)
    else:
        st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")

with st.container():
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("üí∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç")
        fig2 = px.histogram(filtered_df, x="salary_from", nbins=20, title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–∞–º", color_discrete_sequence=['blue'])
        st.plotly_chart(fig2)

    with col2:
        st.subheader("üìå –î–æ–ª—è —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏")
        employment_counts = filtered_df["employment_type"].value_counts().reset_index()
        employment_counts.columns = ["employment_type", "count"]
        fig3 = px.pie(employment_counts, names="employment_type", values="count", title="–î–æ–ª—è —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏")
        st.plotly_chart(fig3)

with st.container():
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("üéØ –¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã")
        experience_counts = filtered_df["experience"].value_counts().reset_index()
        experience_counts.columns = ["experience", "count"]
        fig4 = px.pie(experience_counts, names="experience", values="count", title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ–ø—ã—Ç—É —Ä–∞–±–æ—Ç—ã")
        st.plotly_chart(fig4)

    with col2:
        st.subheader("üè¢ –¢–æ–ø-10 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π")
        top_employers = df["employer_name"].value_counts().nlargest(10).reset_index()
        top_employers.columns = ["employer_name", "count"]
        fig5 = px.bar(top_employers, x="employer_name", y="count", title="–¢–æ–ø-10 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π", color="employer_name")
        st.plotly_chart(fig5)
