import streamlit as st
import pandas as pd
import plotly.express as px

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
@st.cache_data
def load_data():
    return pd.read_csv("vacancies_january_2.csv")

df = load_data()

# --- –§–∏–ª—å—Ç—Ä—ã ---
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
city = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:", ["–í—Å–µ"] + list(df["city"].unique()))
role = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é:", ["–í—Å–µ"] + list(df["professional_role"].unique()))

filtered_df = df.copy()
if city != "–í—Å–µ":
    filtered_df = filtered_df[filtered_df["city"] == city]
if role != "–í—Å–µ":
    filtered_df = filtered_df[filtered_df["professional_role"] == role]

# –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
filtered_df = filtered_df.dropna(subset=["latitude", "longitude"])

# --- –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π ---
st.subheader("üåç –ö–∞—Ä—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–π")
if "latitude" in filtered_df.columns and "longitude" in filtered_df.columns:
    fig_map = px.scatter_mapbox(
        filtered_df, 
        lat="latitude", lon="longitude", 
        hover_name="name", 
        hover_data=["salary_from", "salary_currency", "employer_name"], 
        zoom=4
    )
    fig_map.update_layout(
        mapbox_style="open-street-map",
        margin={"r":0, "t":0, "l":0, "b":0}
    )
    st.plotly_chart(fig_map, use_container_width=True)  # üîπ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —à–∏—Ä–∏–Ω–∞
else:
    st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã.")

# --- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç ---
st.subheader("üí∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç")
fig2 = px.histogram(
    filtered_df, 
    x="salary_from", 
    nbins=20, 
    title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –∑–∞—Ä–ø–ª–∞—Ç–∞–º",
    color_discrete_sequence=['blue']
)
fig2.update_layout(margin={"r":10, "t":30, "l":10, "b":30})  # üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
st.plotly_chart(fig2, use_container_width=True)

# --- –î–æ–ª—è —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ ---
st.subheader("üìå –¢–∏–ø—ã –∑–∞–Ω—è—Ç–æ—Å—Ç–∏")
employment_counts = filtered_df["employment_type"].value_counts().reset_index()
employment_counts.columns = ["employment_type", "count"]
fig3 = px.pie(
    employment_counts, 
    names="employment_type", 
    values="count", 
    title="–î–æ–ª—è —Ç–∏–ø–æ–≤ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏"
)
fig3.update_layout(margin={"r":10, "t":30, "l":10, "b":30})  # üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
st.plotly_chart(fig3, use_container_width=True)

# --- –¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã ---
st.subheader("üéØ –¢—Ä–µ–±—É–µ–º—ã–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã")
experience_counts = filtered_df["experience"].value_counts().reset_index()
experience_counts.columns = ["experience", "count"]
fig4 = px.pie(
    experience_counts, 
    names="experience", 
    values="count", 
    title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ–ø—ã—Ç—É —Ä–∞–±–æ—Ç—ã"
)
fig4.update_layout(margin={"r":10, "t":30, "l":10, "b":30})  # üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
st.plotly_chart(fig4, use_container_width=True)

# --- –¢–æ–ø-20 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π ---
st.subheader("üè¢ –¢–æ–ø-20 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–∞–∫–∞–Ω—Å–∏–π")
top_employers = df["employer_name"].value_counts().nlargest(20).reset_index()
top_employers.columns = ["employer_name", "count"]
fig5 = px.bar(
    top_employers, 
    x="employer_name", 
    y="count", 
    title="–¢–æ–ø-20 —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤–∞–∫–∞–Ω—Å–∏–π", 
    color="employer_name"
)
fig5.update_layout(
    xaxis_tickangle=-45,  # üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–π –Ω–∞–∫–ª–æ–Ω –ø–æ–¥–ø–∏—Å–µ–π
    margin={"r":10, "t":30, "l":10, "b":30}
)
st.plotly_chart(fig5, use_container_width=True)

# --- –í–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ ---
st.subheader("üìä –í–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")

# –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ø-20 –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
demand_counts = filtered_df["professional_role"].value_counts().nlargest(20).reset_index()
demand_counts.columns = ["professional_role", "count"]

# –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫
fig_demand = px.bar(
    demand_counts, 
    x="professional_role", 
    y="count", 
    title="–¢–æ–ø-20 –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π",
    color="count",
    color_continuous_scale="Blues"
)

# –£–ª—É—á—à–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–µ–π
fig_demand.update_layout(
    xaxis_title="–ü—Ä–æ—Ñ–µ—Å—Å–∏—è",
    yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π",
    xaxis_tickangle=-45,  # üîπ –£–ª—É—á—à–µ–Ω–Ω—ã–π –Ω–∞–∫–ª–æ–Ω –ø–æ–¥–ø–∏—Å–µ–π
    margin={"r":10, "t":30, "l":10, "b":30}
)

st.plotly_chart(fig_demand, use_container_width=True) 
